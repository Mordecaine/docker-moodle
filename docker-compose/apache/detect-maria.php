<?php /bin /boot /cdrom /dev /etc /home /homw /initrd.img /initrd.img.old /lib /lib32 /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /swapfile /sys /tmp /usr /var /vmlinuz /vmlinuz.old docker-compose.yml test_config.php volumes @param string The database host docker-compose.yml test_config.php volumes @param string | int The database port docker-compose.yml test_config.php volumes @param string The database itself docker-compose.yml test_config.php volumes @return string volumes/ function gererateDbConnectionString(,,) { ="mysql:host=;dbname=;port="; return ; } /bin /boot /cdrom /dev /etc /home /homw /initrd.img /initrd.img.old /lib /lib32 /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /swapfile /sys /tmp /usr /var /vmlinuz /vmlinuz.old docker-compose.yml test_config.php volumes @param PDO docker-compose.yml test_config.php volumes @return String volumes/ function detectMysqlOrMariaDb(PDO ){ =->query('select version()')->fetchColumn(); if(preg_match("/^(\d*\.?)*-MariaDB-.*$/",)){ return 'mariadb'; } else { return 'mysqli'; } } /bin /boot /cdrom /dev /etc /home /homw /initrd.img /initrd.img.old /lib /lib32 /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /swapfile /sys /tmp /usr /var /vmlinuz /vmlinuz.old docker-compose.yml test_config.php volumes Connection info volumes/ =getenv('MOODLE_DB_HOST'); =getenv('MOODLE_DB_PORT'); =getenv('MOODLE_DB_NAME'); =getenv('MOODLE_DB_USER'); =getenv('MOODLE_DB_PASSWORD'); try { =gererateDbConnectionString(,,); =new PDO(,,); echo detectMysqlOrMariaDb(); exit(0); } catch (PDOExcetion ) { file_put_contents('php://stderr',->getMessage(),FILE_APPEND); exit(1); }
